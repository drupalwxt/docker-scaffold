# Docker Compose (v2)

version: "2"
services:
  web:
    build:
      context: docker/images/dev
      args:
        - BASE_IMAGE=${BASE_IMAGE}
        - http_proxy=${HTTP_PROXY}
        - https_proxy=${HTTP_PROXY}
        - HTTP_PROXY=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTP_PROXY}
        - NO_PROXY=hub,${NO_PROXY}
        - no_proxy=hub,${NO_PROXY}
    environment:
      - http_proxy=${HTTP_PROXY}
      - https_proxy=${HTTP_PROXY}
      - HTTP_PROXY=${HTTP_PROXY}
      - HTTPS_PROXY=${HTTP_PROXY}
      - NO_PROXY=${NO_PROXY}
      - no_proxy=${NO_PROXY}
    volumes:
      - mutagen-cache:/var/www
    depends_on:
      - db
    ports:
      - "9000"
    container_name: ${DOCKER_NAME}_web

  cli:
    build:
      context: docker/images/ci
      args:
        - BASE_IMAGE=${BASE_IMAGE}
    entrypoint: ["/bin/sleep", "3650d"]
    environment:
      - http_proxy=${HTTP_PROXY}
      - https_proxy=${HTTP_PROXY}
      - HTTP_PROXY=${HTTP_PROXY}
      - HTTPS_proxy=${HTTP_PROXY}
      - NO_PROXY=hub,${NO_PROXY}
      - no_proxy=hub,${NO_PROXY}
    volumes:
      - mutagen-cache:/var/www
    depends_on:
      - db
      - web
    container_name: ${DOCKER_NAME}_cli

  db:
    image: postgres:12-alpine
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
    volumes:
      - db_data:/var/lib/postgresql
    ports:
      - "5432:5432"
    container_name: ${DOCKER_NAME}_db
    command:
      [
        "-c",
        "shared_buffers=512MB",
        "-c",
        "max_connections=200",
        "-c",
        "work_mem=2048MB",
        "-c",
        "effective_cache_size=512MB",
        "-c",
        "maintenance_work_mem=32MB",
        "-c",
        "min_wal_size=512MB",
        "-c",
        "max_wal_size=512MB",
        "-c",
        "wal_buffers=8048kB",
      ]

  nginx:
    build:
      context: docker/images/nginx
      args:
        - BASE_IMAGE=${BASE_IMAGE}
    volumes:
      - mutagen-cache:/var/www
      - ./docker/conf/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      - web
    restart: always
    container_name: ${DOCKER_NAME}_nginx

  hub:
    image: selenium/hub:3.141.59
    ports:
      - "4444:4444"
    depends_on:
      - db
      - web
    container_name: ${DOCKER_NAME}_hub

  firefox:
    image: selenium/node-firefox:2.53.1
    depends_on:
      - db
      - web
      - hub
    container_name: ${DOCKER_NAME}_firefox
    environment:
      HUB_PORT_4444_TCP_ADDR: hub

volumes:
  db_data:
  files_data:
  files_private_data:
  mutagen-cache:
    external: true
    name: ${MUTAGEN_VOLUME}

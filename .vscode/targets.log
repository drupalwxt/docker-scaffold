make all --print-data-base --no-builtin-variables --no-builtin-rules --question
Makefile:1: .env: No such file or directory
make: *** No rule to make target '.env'.  Stop.

# GNU Make 4.2.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2016 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Thu Sep  8 13:35:48 2022

# Variables

# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
WSLENV = VSCODE_WSL_EXT_LOCATION/up
# default
.SHELLFLAGS := -c
# automatic
?D = $(patsubst %/,%,$(dir $?))
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# makefile
CURDIR := /home/chiru/docker-scaffold
# makefile
SHELL = /bin/sh
# environment
VSCODE_NLS_CONFIG = {"locale":"en","availableLanguages":{}}
# environment
_ = /home/chiru/.vscode-server/bin/92d25e35d9bf1a6b16f7d0758f25d48ace11e5b9/node
# makefile (from 'Makefile', line 1)
MAKEFILE_LIST :=  Makefile
# 'override' directive
GNUMAKEFLAGS := 
# environment
XDG_DATA_DIRS = /usr/local/share:/usr/share:/var/lib/snapd/desktop
# makefile (from 'Makefile', line 4)
VERSION := 'latest'
# environment
LESSOPEN = | /usr/bin/lesspipe %s
# environment
VSCODE_CWD = /mnt/c/Users/KumarC/AppData/Local/Programs/Microsoft VS Code
# default
MAKE_HOST := x86_64-pc-linux-gnu
# environment
PATH = /home/chiru/.vscode-server/bin/92d25e35d9bf1a6b16f7d0758f25d48ace11e5b9/bin/remote-cli:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/system32:/mnt/c/Windows:/mnt/c/Windows/System32/Wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files/PuTTY/:/mnt/c/Users/KumarC/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/KumarC/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Users/KumarC/AppData/Local/atom/bin:/snap/bin
# environment
ELECTRON_RUN_AS_NODE = 1
# environment
VSCODE_IPC_HOOK_CLI = /tmp/vscode-ipc-e97f5179-c720-4f7a-a5ac-87720420c478.sock
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# environment
LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
# automatic
%F = $(notdir $%)
# environment
PWD = /home/chiru/docker-scaffold
# default
.LOADED := 
# environment
WSL_INTEROP = /run/WSL/11_interop
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /home/chiru
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# environment
LOGNAME = chiru
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
MAKELEVEL := 0
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# environment
SHLVL = 0
# default
MAKE_VERSION := 4.2.1
# environment
USER = chiru
# makefile
.DEFAULT_GOAL := all
# makefile (from 'Makefile', line 3)
NAME := drupalwxt/site-wxt
# automatic
%D = $(patsubst %/,%,$(dir $%))
# environment
VSCODE_WSL_EXT_LOCATION = /mnt/c/Users/KumarC/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.3
# default
MAKE_COMMAND := make
# default
.VARIABLES := 
# automatic
*F = $(notdir $*)
# makefile
MAKEFLAGS = prR
# environment
MFLAGS = -prR
# automatic
*D = $(patsubst %/,%,$(dir $*))
# automatic
+D = $(patsubst %/,%,$(dir $+))
# automatic
+F = $(notdir $+)
# environment
VSCODE_HANDLES_SIGPIPE = true
# makefile (from 'Makefile', line 5)
PLATFORM := Linux
# 'override' directive
.SHELLSTATUS := 0
# default
MAKEFILES := 
# automatic
<F = $(notdir $<)
# environment
LC_ALL = C
# environment
HOSTTYPE = x86_64
# automatic
^F = $(notdir $^)
# default
SUFFIXES := 
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# default
.RECIPEPREFIX := 
# environment
LANG = C
# environment
TERM = xterm-256color
# environment
WSL_DISTRO_NAME = Ubuntu
# environment
MOTD_SHOWN = update-motd
# variable set hash-table stats:
# Load=67/1024=7%, Rehash=0, Collisions=4/98=4%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 2064, inode 85823): 19 files, no impossibilities.

# 19 files, no impossibilities in 1 directories.

# Implicit Rules

# No implicit rules.

# Files

all: base
#  Phony target (prerequisite of .PHONY).
#  Command line target.
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

.PHONY: all base behat build clean clean_composer clean_docker clean_site composer_install docker_build drupal_cs drupal_export drupal_install drupal_import drupal_migrate drush_archive env export import lint list phpcs phpunit release tag_latest test up update
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

behat:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 24):
	./docker/bin/behat -vv -c behat.yml --colors

drush_archive:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 86):
	./docker/bin/drush archive-dump --destination="/var/www/files_private/drupal$$(date +%Y%m%d_%H%M%S).tgz" \
                                  --generator="Drupal"

clean_site: clean_composer composer_install clean_docker base docker_build drupal_install
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 47):
	./docker/bin/drush cr

drupal_import:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 77):
	docker-compose exec -T cli bash /var/www/docker/bin/cli drupal-import wxt "${DATABASE_BACKUP}"

up:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 147):
	docker-machine start default
	eval $$(docker-machine env default)
	docker-compose up -d

# Not a target:
Makefile:
#  Implicit rule search has not been done.
#  Last modified 2022-07-12 09:58:11
#  File has not been updated.

update: base
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 152):
	git pull origin 8.x
	composer update
	docker-compose build --no-cache
	docker-compose up -d

docker_build:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 53):
	docker-compose build --no-cache
	docker-compose up -d

build: all
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

phpunit:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 128):
	./docker/bin/phpunit --colors=always \
	    --testsuite=kernel \
	    --group $(PROFILE_NAME)
	./docker/bin/phpunit --colors=always \
	    --testsuite=unit \
	    --group $(PROFILE_NAME)

docker_stop:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 60):
	docker-compose down

drupal_perm:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 83):
	docker-compose exec -T cli bash /var/www/docker/bin/cli drupal-perm $(PROFILE_NAME)

clean_composer:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
 
#  recipe to execute (from 'Makefile', line 31):
	rm -rf html
	rm -rf vendor
	rm -f composer.lock
	composer clear-cache

tag_latest:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 142):
	docker tag -f $(NAME):$(VERSION) $(NAME):latest

# Not a target:
.env:
#  Implicit rule search has been done.
#  File does not exist.
#  File has not been updated.

import: drupal_init drupal_perm drupal_import
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

clean_drupal: clean_composer composer_install docker_stop docker_start drupal_install
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

composer_install:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 50):
	composer install

drupal_init:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 71):
	docker-compose exec -T cli bash /var/www/docker/bin/cli drupal-init $(PROFILE_NAME)

release: tag_latest
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 137):
	@if ! docker images $(NAME) | awk '{ print $$2 }' | grep -q -F $(VERSION); then echo "$(NAME) version $(VERSION) is not yet built. Please run 'make base'"; false; fi
	docker push $(NAME)
	@echo "*** Don't forget to create a tag. git tag rel-$(VERSION) && git push origin rel-$(VERSION)"

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

base:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 10):
	docker build -f docker/Dockerfile \
	    -t $(NAME):$(VERSION) \
	    --build-arg SSH_PRIVATE_KEY="$$(test -f $$HOME/.ssh/id_rsa && base64 $$HOME/.ssh/id_rsa)" \
	    --no-cache \
	    --build-arg http_proxy=$$HTTP_PROXY \
	    --build-arg HTTP_PROXY=$$HTTP_PROXY \
	    --build-arg https_proxy=$$HTTP_PROXY \
	    --build-arg HTTPS_PROXY=$$HTTP_PROXY \
	    --build-arg no_proxy=$$NO_PROXY \
	    --build-arg NO_PROXY=$$NO_PROXY \
	    --build-arg GIT_USERNAME=$(GIT_USERNAME) \
	    --build-arg GIT_PASSWORD=$(GIT_PASSWORD) .

docker_start:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 57):
	docker-compose up -d

test: phpcs phpunit behat
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

clean: clean_composer
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

export: drupal_export
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

list:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 101):
	@$(MAKE) -pRrq -f $(lastword $(MAKEFILE_LIST)) : 2>/dev/null | awk -v RS= -F: '/^# File/,/^# Finished Make data base/ {if ($$1 !~ "^[#.]") {print $$1}}' | sort | egrep -v -e '^[^[:alnum:]]' -e '^$@$$' | xargs

clean_docker:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 37):
	rm -rf docker
	git clone $(DOCKER_REPO) docker
	[ "$(shell docker images -q --filter "dangling=true")" = "" ] || docker rmi -f $(shell docker images -q --filter "dangling=true")
	[ "$(shell docker ps -a -q -f name=${DOCKER_NAME}_)" = "" ] || docker rm -f $(shell docker ps -a -q -f name=${DOCKER_NAME}_)
	[ "$(shell docker images -q -f reference=${DOCKER_IMAGE}_*)" = "" ] || docker rmi -f $(shell docker images -q -f reference=*${DOCKER_IMAGE}_*)
	[ "$(shell docker images -q -f reference=${NAME})" = "" ] || docker rmi -f $(shell docker images -q -f reference=${NAME})

drupal_install:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 68):
	docker-compose exec -T cli bash /var/www/docker/bin/cli drupal-first-run $(DB_NAME)

drupal_migrate:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 80):
	docker-compose exec -T cli bash /var/www/docker/bin/cli drupal-migrate

lint:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 97):
	./docker/bin/lint

phpcs: drupal_cs
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 104):
	./docker/bin/phpcs --config-set installed_paths /var/www/vendor/drupal/coder/coder_sniffer
	./docker/bin/phpcs --standard=/var/www/html/core/phpcs.xml \
	    --extensions=php,module,inc,install,test,profile,theme \
	    --report=full \
	    --colors \
	    --ignore=/var/www/html/profiles/$(PROFILE_NAME)/modules/custom/wxt_test \
	    --ignore=*.css \
	    --ignore=*.txt \
	    --ignore=*.md \
	    --ignore=/var/www/html/*/custom/*/*.info.yml \
	    /var/www/html/modules/contrib/wxt_library \
	    /var/www/html/themes/contrib/wxt_bootstrap \
	    /var/www/html/profiles/$(PROFILE_NAME)/modules/custom
	./docker/bin/phpcs --standard=/var/www/html/core/phpcs.xml \
	    --extensions=php,module,inc,install,test,profile,theme \
	    --report=full \
	    --colors \
	    --ignore=*.md \
	    -l \
	    /var/www/html/profiles/$(PROFILE_NAME)

drupal_cs:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 63):
	mkdir -p html/core/
	cp docker/conf/phpcs.xml html/core/phpcs.xml
	cp docker/conf/phpunit.xml html/core/phpunit.xml

drupal_export:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 74):
	docker-compose exec -T cli bash /var/www/docker/bin/cli drupal-export $(PROFILE_NAME) "${DATABASE_BACKUP}"

env:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 90):
	eval $$(docker-machine env default)

# files hash-table stats:
# Load=38/1024=4%, Rehash=0, Collisions=3/110=3%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 58 / storage = 558 B / avg = 9 B
# current buf: size = 8162 B / used = 558 B / count = 58 / avg = 9 B

# strcache performance: lookups = 150 / hit rate = 61%
# hash-table stats:
# Load=58/8192=1%, Rehash=0, Collisions=4/150=3%
# Finished Make data base on Thu Sep  8 13:35:48 2022

 
